{"version":3,"sources":["../../../src/port/service/file-metadata.service 2.ts"],"sourcesContent":["import { Inject } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { DeleteObjectsCommand, PutObjectCommand, PutObjectCommandOutput, S3Client, S3ServiceException } from '@aws-sdk/client-s3';\n\nimport { FileUploadType } from '@/domain/enum/file-upload-type.enum';\nimport { CustomException } from '@/exception/custom.exception';\nimport { ErrorCode } from '@/exception/error-code.enum';\nimport { FileMetadataServiceOutPort } from '@/port/outbound/file-metadata-service.out-port';\n\nexport default class FileMetadataService implements FileMetadataServiceOutPort {\n  private readonly BUCKET_NAME: string;\n\n  constructor(\n    private readonly configService: ConfigService,\n    @Inject('S3_CLIENT') private s3Client: S3Client,\n  ) {\n    this.BUCKET_NAME = this.configService.get('AWS_S3_BUCKETS_NAME') as string;\n  }\n\n  async upload(\n    uploadType: FileUploadType,\n    serialId: number,\n    file: Express.Multer.File,\n  ): Promise<{ url: string; mimeType: string; fileSize: number }> {\n    const decodedFileName = Buffer.from(file.originalname, 'latin1').toString('utf8');\n    let filePath = '';\n\n    switch (uploadType) {\n      case FileUploadType.CUSTOM_EMISSION_FACTOR_REFERENCE:\n        if (file.size >= 31457280) {\n          throw new CustomException(ErrorCode.FILE_SIZE_EXCEEDED);\n        }\n        filePath += `custom-emission-factor/id-${serialId}`;\n        break;\n    }\n\n    let putObjectCommandOutput: PutObjectCommandOutput | null = null;\n\n    try {\n      const key = `${filePath}/${decodedFileName}`;\n\n      const command = new PutObjectCommand({\n        Bucket: this.BUCKET_NAME,\n        Key: key,\n        Body: file.buffer,\n        ContentType: file.mimetype,\n      });\n\n      putObjectCommandOutput = await this.s3Client.send(command);\n\n      return { url: key, mimeType: file.mimetype, fileSize: file.size };\n    } catch (error) {\n      if (error instanceof S3ServiceException) {\n        throw error;\n      }\n\n      if (putObjectCommandOutput?.ETag) {\n        const deleteCommand = new DeleteObjectsCommand({ Bucket: this.BUCKET_NAME, Delete: { Objects: [{ Key: filePath }] } });\n\n        await this.s3Client.send(deleteCommand);\n      }\n\n      throw error;\n    }\n  }\n}\n"],"names":["FileMetadataService","upload","uploadType","serialId","file","decodedFileName","Buffer","from","originalname","toString","filePath","FileUploadType","CUSTOM_EMISSION_FACTOR_REFERENCE","size","CustomException","ErrorCode","FILE_SIZE_EXCEEDED","putObjectCommandOutput","key","command","PutObjectCommand","Bucket","BUCKET_NAME","Key","Body","buffer","ContentType","mimetype","s3Client","send","url","mimeType","fileSize","error","S3ServiceException","ETag","deleteCommand","DeleteObjectsCommand","Delete","Objects","constructor","configService","get"],"mappings":";;;;;;;eAUqBA;;;wBAVE;wBACO;0BAE+E;oCAE9E;iCACC;+BACN;;;;;;;;;;;;;;;AAGX,IAAA,AAAMA,sBAAN,MAAMA;IAUnB,MAAMC,OACJC,UAA0B,EAC1BC,QAAgB,EAChBC,IAAyB,EACqC;QAC9D,MAAMC,kBAAkBC,OAAOC,IAAI,CAACH,KAAKI,YAAY,EAAE,UAAUC,QAAQ,CAAC;QAC1E,IAAIC,WAAW;QAEf,OAAQR;YACN,KAAKS,kCAAc,CAACC,gCAAgC;gBAClD,IAAIR,KAAKS,IAAI,IAAI,UAAU;oBACzB,MAAM,IAAIC,gCAAe,CAACC,wBAAS,CAACC,kBAAkB;gBACxD;gBACAN,YAAY,CAAC,0BAA0B,EAAEP,UAAU;gBACnD;QACJ;QAEA,IAAIc,yBAAwD;QAE5D,IAAI;YACF,MAAMC,MAAM,GAAGR,SAAS,CAAC,EAAEL,iBAAiB;YAE5C,MAAMc,UAAU,IAAIC,0BAAgB,CAAC;gBACnCC,QAAQ,IAAI,CAACC,WAAW;gBACxBC,KAAKL;gBACLM,MAAMpB,KAAKqB,MAAM;gBACjBC,aAAatB,KAAKuB,QAAQ;YAC5B;YAEAV,yBAAyB,MAAM,IAAI,CAACW,QAAQ,CAACC,IAAI,CAACV;YAElD,OAAO;gBAAEW,KAAKZ;gBAAKa,UAAU3B,KAAKuB,QAAQ;gBAAEK,UAAU5B,KAAKS,IAAI;YAAC;QAClE,EAAE,OAAOoB,OAAO;YACd,IAAIA,iBAAiBC,4BAAkB,EAAE;gBACvC,MAAMD;YACR;YAEA,IAAIhB,wBAAwBkB,MAAM;gBAChC,MAAMC,gBAAgB,IAAIC,8BAAoB,CAAC;oBAAEhB,QAAQ,IAAI,CAACC,WAAW;oBAAEgB,QAAQ;wBAAEC,SAAS;4BAAC;gCAAEhB,KAAKb;4BAAS;yBAAE;oBAAC;gBAAE;gBAEpH,MAAM,IAAI,CAACkB,QAAQ,CAACC,IAAI,CAACO;YAC3B;YAEA,MAAMH;QACR;IACF;IApDAO,YACE,AAAiBC,aAA4B,EAC7C,AAA6Bb,QAAkB,CAC/C;aAFiBa,gBAAAA;aACYb,WAAAA;QAE7B,IAAI,CAACN,WAAW,GAAG,IAAI,CAACmB,aAAa,CAACC,GAAG,CAAC;IAC5C;AAgDF"}