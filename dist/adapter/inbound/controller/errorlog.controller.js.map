{"version":3,"sources":["../../../../src/adapter/inbound/controller/errorlog.controller.ts"],"sourcesContent":["import { Controller, Get, Query } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\nimport { PaginationResponse } from '@/adapter/inbound/dto/common/pagination.dto';\nimport { PaginationQuery } from '@/adapter/inbound/dto/pagination';\nimport { SearchErrorLog } from '@/adapter/inbound/dto/request/errorlog/search-errorlog';\nimport { ErrorLogResponseDto } from '@/adapter/inbound/dto/response/errorlog/errorlog-response.dto';\nimport { ApiSuccessResponse } from '@/adapter/inbound/dto/swagger.decorator';\nimport { ErrorLogServiceInPort } from '@/port/inbound/error-log-service.in-port';\n\n@ApiTags('ErrorLog')\n@Controller('/error-logs')\nexport class ErrorLogController {\n  constructor(private readonly errorLogService: ErrorLogServiceInPort) {}\n\n  @ApiOperation({ summary: 'error log search' })\n  @ApiSuccessResponse(200, ErrorLogResponseDto, { paginated: true })\n  @Get()\n  async findAll(\n    @Query() searchErrorLog: SearchErrorLog,\n    @Query() paginationQuery: PaginationQuery,\n  ): Promise<PaginationResponse<ErrorLogResponseDto>> {\n    return this.errorLogService.findAll(searchErrorLog, paginationQuery);\n  }\n}\n"],"names":["ErrorLogController","findAll","searchErrorLog","paginationQuery","errorLogService","constructor","summary","paginated"],"mappings":";;;;+BAYaA;;;eAAAA;;;wBAZ0B;yBACD;4BAGN;gCACD;qCACK;kCACD;uCACG;;;;;;;;;;;;;;;AAI/B,IAAA,AAAMA,qBAAN,MAAMA;IAGX,MAGMC,QACJ,AAASC,cAA8B,EACvC,AAASC,eAAgC,EACS;QAClD,OAAO,IAAI,CAACC,eAAe,CAACH,OAAO,CAACC,gBAAgBC;IACtD;IAVAE,YAAY,AAAiBD,eAAsC,CAAE;aAAxCA,kBAAAA;IAAyC;AAWxE;;;QATkBE,SAAS;;;QACuBC,WAAW"}