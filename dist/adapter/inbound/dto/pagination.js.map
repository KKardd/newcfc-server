{"version":3,"sources":["../../../../src/adapter/inbound/dto/pagination.ts"],"sourcesContent":["import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { Transform } from 'class-transformer';\nimport { IsInt, IsOptional, Max } from 'class-validator';\n\nexport class PaginationQuery {\n  @ApiPropertyOptional({ type: Number, default: 1, description: 'Page number' })\n  @IsInt()\n  @IsOptional()\n  page: number = 1;\n\n  @ApiPropertyOptional({ type: Number, default: 20, description: 'Number of items per page' })\n  @Transform(({ value }) => {\n    const number = parseInt(value, 10);\n\n    return number === -1 ? undefined : number;\n  })\n  @IsInt()\n  @Max(100)\n  @IsOptional()\n  countPerPage?: number = 20;\n\n  get skip(): number {\n    if (this.countPerPage === undefined) {\n      return 0;\n    }\n\n    return (this.page - 1) * this.countPerPage;\n  }\n}\n\ntype PaginationParameters = {\n  paginationQuery: PaginationQuery;\n  totalCount: number;\n};\n\nexport class Pagination {\n  @ApiProperty({ type: Number })\n  readonly page: number;\n\n  @ApiProperty({ type: Number })\n  readonly countPerPage: number;\n\n  @ApiProperty({ type: Number })\n  readonly totalCount: number;\n\n  @ApiProperty({ type: Number })\n  readonly pageCount: number;\n\n  @ApiProperty({ type: Boolean })\n  readonly hasPrevPage: boolean;\n\n  @ApiProperty({ type: Boolean })\n  readonly hasNextPage: boolean;\n\n  constructor({ paginationQuery, totalCount }: PaginationParameters) {\n    this.page = paginationQuery.page;\n    this.countPerPage = paginationQuery.countPerPage === undefined ? -1 : paginationQuery.countPerPage;\n    this.totalCount = totalCount;\n\n    if (this.countPerPage === -1) {\n      this.pageCount = 1;\n      this.hasPrevPage = false;\n      this.hasNextPage = false;\n    } else {\n      this.pageCount = Math.ceil(this.totalCount / this.countPerPage);\n      this.hasPrevPage = this.page > 1;\n      this.hasNextPage = this.page < this.pageCount;\n    }\n  }\n}\n"],"names":["Pagination","PaginationQuery","skip","countPerPage","undefined","page","type","Number","default","description","value","number","parseInt","constructor","paginationQuery","totalCount","pageCount","hasPrevPage","hasNextPage","Math","ceil","Boolean"],"mappings":";;;;;;;;;;;IAoCaA,UAAU;eAAVA;;IA/BAC,eAAe;eAAfA;;;yBALoC;kCAEvB;gCACa;;;;;;;;;;AAEhC,IAAA,AAAMA,kBAAN,MAAMA;IAiBX,IAAIC,OAAe;QACjB,IAAI,IAAI,CAACC,YAAY,KAAKC,WAAW;YACnC,OAAO;QACT;QAEA,OAAO,AAAC,CAAA,IAAI,CAACC,IAAI,GAAG,CAAA,IAAK,IAAI,CAACF,YAAY;IAC5C;;aAnBAE,OAAe;aAWfF,eAAwB;;AAS1B;;;QAvByBG,MAAMC;QAAQC,SAAS;QAAGC,aAAa;;;;;;;;QAKvCH,MAAMC;QAAQC,SAAS;QAAIC,aAAa;;sCACnD,EAAEC,KAAK,EAAE;QACnB,MAAMC,SAASC,SAASF,OAAO;QAE/B,OAAOC,WAAW,CAAC,IAAIP,YAAYO;IACrC;;;;;;AAoBK,IAAA,AAAMX,aAAN,MAAMA;IAmBXa,YAAY,EAAEC,eAAe,EAAEC,UAAU,EAAwB,CAAE;QACjE,IAAI,CAACV,IAAI,GAAGS,gBAAgBT,IAAI;QAChC,IAAI,CAACF,YAAY,GAAGW,gBAAgBX,YAAY,KAAKC,YAAY,CAAC,IAAIU,gBAAgBX,YAAY;QAClG,IAAI,CAACY,UAAU,GAAGA;QAElB,IAAI,IAAI,CAACZ,YAAY,KAAK,CAAC,GAAG;YAC5B,IAAI,CAACa,SAAS,GAAG;YACjB,IAAI,CAACC,WAAW,GAAG;YACnB,IAAI,CAACC,WAAW,GAAG;QACrB,OAAO;YACL,IAAI,CAACF,SAAS,GAAGG,KAAKC,IAAI,CAAC,IAAI,CAACL,UAAU,GAAG,IAAI,CAACZ,YAAY;YAC9D,IAAI,CAACc,WAAW,GAAG,IAAI,CAACZ,IAAI,GAAG;YAC/B,IAAI,CAACa,WAAW,GAAG,IAAI,CAACb,IAAI,GAAG,IAAI,CAACW,SAAS;QAC/C;IACF;AACF;;;QAjCiBV,MAAMC;;;;;;QAGND,MAAMC;;;;;;QAGND,MAAMC;;;;;;QAGND,MAAMC;;;;;;QAGND,MAAMe;;;;;;QAGNf,MAAMe"}