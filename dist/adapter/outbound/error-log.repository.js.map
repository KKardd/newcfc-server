{"version":3,"sources":["../../../src/adapter/outbound/error-log.repository.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { Repository } from 'typeorm';\n\nimport { PaginationQuery } from '@/adapter/inbound/dto/pagination';\nimport { SearchErrorLog } from '@/adapter/inbound/dto/request/errorlog/search-errorlog';\nimport { ErrorLog } from '@/domain/entity/error-log.entity';\nimport { ErrorLogServiceOutPort } from '@/port/outbound/error-log-service.out-port';\n\n@Injectable()\nexport class ErrorLogRepository implements ErrorLogServiceOutPort {\n  constructor(\n    @InjectRepository(ErrorLog)\n    private readonly errorLogRepository: Repository<ErrorLog>,\n  ) {}\n\n  async save(errorLog: ErrorLog): Promise<void> {\n    await this.errorLogRepository.save(errorLog);\n  }\n\n  async findAll(searchErrorLog: SearchErrorLog, paginationQuery: PaginationQuery): Promise<[ErrorLog[], number]> {\n    const queryBuilder = this.errorLogRepository.createQueryBuilder('ErrorLog');\n\n    if (searchErrorLog.requestUrl) {\n      queryBuilder.andWhere('ErrorLog.requestUrl = :requestUrl', { requestUrl: searchErrorLog.requestUrl });\n    }\n\n    if (searchErrorLog.method) {\n      queryBuilder.andWhere('ErrorLog.method = :method', { method: searchErrorLog.method });\n    }\n\n    if (searchErrorLog.status) {\n      queryBuilder.andWhere('ErrorLog.status = :status', { status: searchErrorLog.status });\n    }\n\n    queryBuilder.orderBy('ErrorLog.id', 'DESC').skip(paginationQuery.skip).take(paginationQuery.countPerPage);\n\n    const [errorLogs, totalCount] = await queryBuilder.getManyAndCount();\n\n    return [errorLogs, totalCount];\n  }\n}\n"],"names":["ErrorLogRepository","save","errorLog","errorLogRepository","findAll","searchErrorLog","paginationQuery","queryBuilder","createQueryBuilder","requestUrl","andWhere","method","status","orderBy","skip","take","countPerPage","errorLogs","totalCount","getManyAndCount","constructor"],"mappings":";;;;+BAWaA;;;eAAAA;;;wBAXc;yBACM;0BAEN;gCAIF;;;;;;;;;;;;;;;AAIlB,IAAA,AAAMA,qBAAN,MAAMA;IAMX,MAAMC,KAAKC,QAAkB,EAAiB;QAC5C,MAAM,IAAI,CAACC,kBAAkB,CAACF,IAAI,CAACC;IACrC;IAEA,MAAME,QAAQC,cAA8B,EAAEC,eAAgC,EAAiC;QAC7G,MAAMC,eAAe,IAAI,CAACJ,kBAAkB,CAACK,kBAAkB,CAAC;QAEhE,IAAIH,eAAeI,UAAU,EAAE;YAC7BF,aAAaG,QAAQ,CAAC,qCAAqC;gBAAED,YAAYJ,eAAeI,UAAU;YAAC;QACrG;QAEA,IAAIJ,eAAeM,MAAM,EAAE;YACzBJ,aAAaG,QAAQ,CAAC,6BAA6B;gBAAEC,QAAQN,eAAeM,MAAM;YAAC;QACrF;QAEA,IAAIN,eAAeO,MAAM,EAAE;YACzBL,aAAaG,QAAQ,CAAC,6BAA6B;gBAAEE,QAAQP,eAAeO,MAAM;YAAC;QACrF;QAEAL,aAAaM,OAAO,CAAC,eAAe,QAAQC,IAAI,CAACR,gBAAgBQ,IAAI,EAAEC,IAAI,CAACT,gBAAgBU,YAAY;QAExG,MAAM,CAACC,WAAWC,WAAW,GAAG,MAAMX,aAAaY,eAAe;QAElE,OAAO;YAACF;YAAWC;SAAW;IAChC;IA7BAE,YACE,AACiBjB,kBAAwC,CACzD;aADiBA,qBAAAA;IAChB;AA2BL"}