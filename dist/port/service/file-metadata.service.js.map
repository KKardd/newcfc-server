{"version":3,"sources":["../../../src/port/service/file-metadata.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { DeleteObjectCommand, PutObjectCommand, S3Client } from '@aws-sdk/client-s3';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { FileUploadType } from '@/domain/enum/file-upload-type.enum';\nimport { FileMetadataServiceOutPort } from '@/port/outbound/file-metadata-service.out-port';\n\n@Injectable()\nexport class FileMetadataService implements FileMetadataServiceOutPort {\n  constructor(\n    @Inject('S3_CLIENT') private readonly s3Client: S3Client,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async upload(\n    uploadType: FileUploadType,\n    serialNumber: number,\n    file: Express.Multer.File,\n  ): Promise<{ url: string; mimeType: string; fileSize: number }> {\n    const bucketName = this.configService.get<string>('AWS_S3_BUCKETS_NAME');\n    const fileKey = `${uploadType}/${serialNumber}/${uuidv4()}-${file.originalname}`;\n\n    await this.s3Client.send(\n      new PutObjectCommand({\n        Bucket: bucketName,\n        Key: fileKey,\n        Body: file.buffer,\n        ContentType: file.mimetype,\n      }),\n    );\n\n    return {\n      url: `https://${bucketName}.s3.amazonaws.com/${fileKey}`,\n      mimeType: file.mimetype,\n      fileSize: file.size,\n    };\n  }\n\n  async getFileUrl(filePath: string): Promise<string> {\n    const bucketName = this.configService.get<string>('AWS_S3_BUCKETS_NAME');\n    return `https://${bucketName}.s3.amazonaws.com/${filePath}`;\n  }\n\n  async deleteFile(filePath: string): Promise<void> {\n    const bucketName = this.configService.get<string>('AWS_S3_BUCKETS_NAME');\n\n    await this.s3Client.send(\n      new DeleteObjectCommand({\n        Bucket: bucketName,\n        Key: filePath,\n      }),\n    );\n  }\n}\n"],"names":["FileMetadataService","upload","uploadType","serialNumber","file","bucketName","configService","get","fileKey","uuidv4","originalname","s3Client","send","PutObjectCommand","Bucket","Key","Body","buffer","ContentType","mimetype","url","mimeType","fileSize","size","getFileUrl","filePath","deleteFile","DeleteObjectCommand","constructor"],"mappings":";;;;+BAUaA;;;eAAAA;;;wBAVsB;wBACL;0BAEkC;sBACnC;;;;;;;;;;;;;;;AAMtB,IAAA,AAAMA,sBAAN,MAAMA;IAMX,MAAMC,OACJC,UAA0B,EAC1BC,YAAoB,EACpBC,IAAyB,EACqC;QAC9D,MAAMC,aAAa,IAAI,CAACC,aAAa,CAACC,GAAG,CAAS;QAClD,MAAMC,UAAU,GAAGN,WAAW,CAAC,EAAEC,aAAa,CAAC,EAAEM,IAAAA,QAAM,IAAG,CAAC,EAAEL,KAAKM,YAAY,EAAE;QAEhF,MAAM,IAAI,CAACC,QAAQ,CAACC,IAAI,CACtB,IAAIC,0BAAgB,CAAC;YACnBC,QAAQT;YACRU,KAAKP;YACLQ,MAAMZ,KAAKa,MAAM;YACjBC,aAAad,KAAKe,QAAQ;QAC5B;QAGF,OAAO;YACLC,KAAK,CAAC,QAAQ,EAAEf,WAAW,kBAAkB,EAAEG,SAAS;YACxDa,UAAUjB,KAAKe,QAAQ;YACvBG,UAAUlB,KAAKmB,IAAI;QACrB;IACF;IAEA,MAAMC,WAAWC,QAAgB,EAAmB;QAClD,MAAMpB,aAAa,IAAI,CAACC,aAAa,CAACC,GAAG,CAAS;QAClD,OAAO,CAAC,QAAQ,EAAEF,WAAW,kBAAkB,EAAEoB,UAAU;IAC7D;IAEA,MAAMC,WAAWD,QAAgB,EAAiB;QAChD,MAAMpB,aAAa,IAAI,CAACC,aAAa,CAACC,GAAG,CAAS;QAElD,MAAM,IAAI,CAACI,QAAQ,CAACC,IAAI,CACtB,IAAIe,6BAAmB,CAAC;YACtBb,QAAQT;YACRU,KAAKU;QACP;IAEJ;IA3CAG,YACE,AAAsCjB,QAAkB,EACxD,AAAiBL,aAA4B,CAC7C;aAFsCK,WAAAA;aACrBL,gBAAAA;IAChB;AAyCL"}